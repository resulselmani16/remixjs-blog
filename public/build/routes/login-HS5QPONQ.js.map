{
  "version": 3,
  "sources": ["../../../app/routes/login.tsx"],
  "sourcesContent": ["import { json } from \"@remix-run/node\";\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport authenticator from \"~/services/auth.server\";\nimport { sessionStorage } from \"~/session.server\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await authenticator.isAuthenticated(request, {\n    successRedirect: \"/posts/admin\",\n  });\n\n  const session = await sessionStorage.getSession(\n    request.headers.get(\"Cookie\")\n  );\n\n  const error = session.get(\"sessionErrorKey\");\n  return json<any>({ error });\n};\n\nexport const action: ActionFunction = async ({ request, context }) => {\n  const resp = await authenticator.authenticate(\"form\", request, {\n    successRedirect: \"/posts/admin\",\n    failureRedirect: \"/login\",\n    throwOnError: true,\n    context,\n  });\n  console.log(resp);\n  return resp;\n};\n\nexport default function LoginPage() {\n  const loaderData = useLoaderData();\n  console.log(loaderData);\n  return (\n    <>\n      <button\n        onClick={() => history.go(-1)}\n        className=\"m-12 w-40 rounded bg-slate-400 p-2 text-white\"\n      >\n        &lt; Back to blogs\n      </button>\n      <div className=\"flex h-screen w-90 flex-col items-center justify-center\">\n        <h1>Log in to continue</h1>\n        <Form method=\"post\">\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"email\"\n            required\n            className=\"my-4 w-80 rounded border border-slate-400 p-2\"\n          />{\" \"}\n          <br />\n          <input\n            className=\"my-4 w-80 rounded border border-slate-400 p-2\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            autoComplete=\"current-password\"\n          />{\" \"}\n          <br />\n          <button className=\"w-80 rounded bg-green-600 p-2 font-bold text-white\">\n            Sign In{\" \"}\n          </button>\n        </Form>\n        <div>\n          {loaderData?.error ? (\n            <p>ERROR: {loaderData?.error?.message}</p>\n          ) : null}\n        </div>\n      </div>\n    </>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAGA,kBAA0B;AAC1B,qBAA+B;AAJ/B;AA8Be,SAAR,YAA6B;AA9BpC;AA+BE,QAAM,aAAa,cAAc;AACjC,UAAQ,IAAI,UAAU;AACtB,SACE;AAAA,IACE;AAAA,yDAAC;AAAA,QACC,SAAS,MAAM,QAAQ,GAAG,EAAE;AAAA,QAC5B,WAAU;AAAA,QACX;AAAA,SAHD;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MACA,mDAAC;AAAA,QAAI,WAAU;AAAA,QACb;AAAA,6DAAC;AAAA,YAAG;AAAA,aAAJ;AAAA;AAAA;AAAA;AAAA,iBAAsB;AAAA,UACtB,mDAAC;AAAA,YAAK,QAAO;AAAA,YACX;AAAA,iEAAC;AAAA,gBACC,MAAK;AAAA,gBACL,MAAK;AAAA,gBACL,aAAY;AAAA,gBACZ,UAAQ;AAAA,gBACR,WAAU;AAAA,iBALZ;AAAA;AAAA;AAAA;AAAA,qBAMA;AAAA,cAAG;AAAA,cACH,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,qBAAI;AAAA,cACJ,mDAAC;AAAA,gBACC,WAAU;AAAA,gBACV,MAAK;AAAA,gBACL,MAAK;AAAA,gBACL,aAAY;AAAA,gBACZ,cAAa;AAAA,iBALf;AAAA;AAAA;AAAA;AAAA,qBAMA;AAAA,cAAG;AAAA,cACH,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,qBAAI;AAAA,cACJ,mDAAC;AAAA,gBAAO,WAAU;AAAA,gBAAqD;AAAA;AAAA,kBAC7D;AAAA;AAAA,iBADV;AAAA;AAAA;AAAA;AAAA,qBAEA;AAAA;AAAA,aAnBF;AAAA;AAAA;AAAA;AAAA,iBAoBA;AAAA,UACA,mDAAC;AAAA,YACE,oDAAY,SACX,mDAAC;AAAA,cAAE;AAAA;AAAA,iBAAQ,8CAAY,UAAZ,mBAAmB;AAAA;AAAA,eAA9B;AAAA;AAAA;AAAA;AAAA,mBAAsC,IACpC;AAAA,aAHN;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA;AAAA,SA3BF;AAAA;AAAA;AAAA;AAAA,aA4BA;AAAA;AAAA,KAnCF;AAAA;AAAA;AAAA;AAAA,SAoCA;AAEJ;",
  "names": []
}
