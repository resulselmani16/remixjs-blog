{
  "version": 3,
  "sources": ["../../../../app/routes/posts/login.tsx"],
  "sourcesContent": ["import type { ActionFunction, LinksFunction } from \"@remix-run/node\";\nimport { useActionData, Link, useSearchParams } from \"@remix-run/react\";\nimport { db } from \"~/utils/db.server\";\n\nconst inputClassName = `w-full rounded border border-gray-500 px-2 py-1 text-lg text-purple-900 outline-purple-300 `;\nexport default function LoginRoute() {\n  const actionData = useActionData();\n  const [searchParams] = useSearchParams();\n  return (\n    <div className=\"flex content-center items-center justify-center text-white\">\n      <div className=\"my-10 rounded-md bg-gradient-to-br from-purple-500 via-purple-400 to-purple-300 px-5 py-6  font-bold md:w-2/3 lg:m-10 lg:w-1/2\">\n        <form method=\"post\">\n          <h1 className=\"text-center text-2xl text-white\">Login</h1>\n          <input\n            type=\"hidden\"\n            name=\"redirectTo\"\n            value={searchParams.get(\"redirectTo\") ?? undefined}\n          />\n          <fieldset className=\"text-center \">\n            <legend className=\"sr-only\">Login or Register?</legend>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"loginType\"\n                value=\"login\"\n                defaultChecked={\n                  !actionData?.fields?.loginType ||\n                  actionData?.fields?.loginType === \"login\"\n                }\n              />{\" \"}\n              Login\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"loginType\"\n                value=\"register\"\n                defaultChecked={actionData?.fields?.loginType === \"register\"}\n              />{\" \"}\n              Register\n            </label>\n          </fieldset>\n          <label className=\"text-lg leading-7 text-white\">\n            Username:\n            <input\n              type=\"text\"\n              className={inputClassName}\n              name=\"username\"\n              required\n              minLength={3}\n              defaultValue={actionData?.fields?.username}\n              aria-invalid={Boolean(actionData?.fieldErrors?.username)}\n              aria-errormessage={\n                actionData?.fieldErrors?.username ? \"username-error\" : undefined\n              }\n            />\n            {actionData?.fieldErrors?.username ? (\n              <p className=\"text-red-500\" role=\"alert\" id=\"username-error\">\n                {actionData.fieldErrors.username}\n              </p>\n            ) : null}\n          </label>\n          <label className=\"text-lg leading-7 text-white\">\n            Password\n            <input\n              name=\"password\"\n              className={inputClassName}\n              required\n              defaultValue={actionData?.fields?.password}\n              type=\"password\"\n              aria-invalid={\n                Boolean(actionData?.fieldErrors?.password) || undefined\n              }\n              aria-errormessage={\n                actionData?.fieldErrors?.password ? \"password-error\" : undefined\n              }\n            />\n            {actionData?.fieldErrors?.password ? (\n              <p className=\"text-red-500\" role=\"alert\" id=\"password-error\">\n                {actionData.fieldErrors.password}\n              </p>\n            ) : null}\n          </label>\n          <div id=\"form-error-message\">\n            {actionData?.formError ? (\n              <p className=\"text-red-500\" role=\"alert\">\n                {actionData.formError}\n              </p>\n            ) : null}\n          </div>\n          <button\n            className=\"my-4 rounded-lg border-2 border-purple-500 bg-white py-2 px-7 font-bold text-purple-500 hover:scale-105\"\n            type=\"submit\"\n          >\n            Login\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": []
}
