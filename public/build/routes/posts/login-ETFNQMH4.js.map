{
  "version": 3,
  "sources": ["../../../../app/routes/posts/login.tsx"],
  "sourcesContent": ["import type {\n  ActionFunction,\n  LinksFunction,\n} from \"@remix-run/node\";\nimport {\n  useActionData,\n  Link,\n  useSearchParams,\n} from \"@remix-run/react\";\nimport { db } from \"~/utils/db.server\";\n\nconst inputClassName = `w-full rounded border border-gray-500 px-2 py-1 text-lg text-purple-900 outline-purple-300 `;\nexport default function LoginRoute() {\n    const actionData = useActionData();\n    const [searchParams] = useSearchParams();\n    return (\n        <div className=\"flex justify-center items-center content-center text-white\">\n            <div className=\"lg:m-10 my-10 md:w-2/3 lg:w-1/2 bg-gradient-to-br from-purple-500 via-purple-400 to-purple-300  font-bold px-5 py-6 rounded-md\">\n                <form method=\"post\">\n                    <h1 className=\"text-center text-2xl text-white\">Login</h1>\n                    <input\n                        type=\"hidden\"\n                        name=\"redirectTo\"\n                        value={\n                            searchParams.get(\"redirectTo\") ?? undefined\n                        }\n                    />\n                    <fieldset className=\"text-center \">\n                        <legend className=\"sr-only\">\n                            Login or Register?\n                        </legend>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                name=\"loginType\"\n                                value=\"login\"\n                                defaultChecked={\n                                    !actionData?.fields?.loginType ||\n                                    actionData?.fields?.loginType === \"login\"\n                                }\n                            />{\" \"}\n                            Login\n                        </label>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                name=\"loginType\"\n                                value=\"register\"\n                                defaultChecked={\n                                    actionData?.fields?.loginType ===\n                                    \"register\"\n                                }\n                            />{\" \"}\n                            Register\n                        </label>\n                    </fieldset>\n                    <label className=\"text-lg leading-7 text-white\">\n                        Username:\n                        <input\n                            type=\"text\"\n                            className={inputClassName}\n                            name=\"username\"\n                            required\n                            minLength={3}\n                            defaultValue={actionData?.fields?.username}\n                            aria-invalid={Boolean(\n                                actionData?.fieldErrors?.username\n                            )}\n                            aria-errormessage={\n                                actionData?.fieldErrors?.username\n                                    ? \"username-error\"\n                                    : undefined\n                            }\n                        />\n                        {actionData?.fieldErrors?.username ? (\n                            <p\n                                className=\"text-red-500\"\n                                role=\"alert\"\n                                id=\"username-error\"\n                            >\n                                {actionData.fieldErrors.username}\n                            </p>\n                        ) : null}\n                    </label>\n                    <label className=\"text-lg leading-7 text-white\">\n                        Password\n                        <input\n                            name=\"password\"\n                            className={inputClassName}\n                            required\n                            defaultValue={actionData?.fields?.password}\n                            type=\"password\"\n                            aria-invalid={\n                                Boolean(\n                                    actionData?.fieldErrors?.password\n                                ) || undefined\n                            }\n                            aria-errormessage={\n                                actionData?.fieldErrors?.password\n                                    ? \"password-error\"\n                                    : undefined\n                            }\n                        />\n                        {actionData?.fieldErrors?.password ? (\n                            <p\n                                className=\"text-red-500\"\n                                role=\"alert\"\n                                id=\"password-error\"\n                            >\n                                {actionData.fieldErrors.password}\n                            </p>\n                        ) : null}\n                    </label>\n                    <div id=\"form-error-message\">\n                        {actionData?.formError ? (\n                            <p\n                                className=\"text-red-500\"\n                                role=\"alert\"\n                            >\n                                {actionData.formError}\n                            </p>\n                        ) : null}\n                    </div>\n                    <button className=\"my-4 py-2 px-7 text-purple-500 font-bold border-2 hover:scale-105 border-purple-500 rounded-lg bg-white\" type=\"submit\">Login</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n"],
  "mappings": "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",
  "names": []
}
