{
  "version": 3,
  "sources": ["node-modules-polyfills:querystring", "../../../../../app/routes/posts/login/index.tsx"],
  "sourcesContent": ["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nvar isArray = Array.isArray || function (xs) {\n  return Object.prototype.toString.call(xs) === '[object Array]';\n};\nfunction stringifyPrimitive(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n}\n\nexport function stringify (obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return map(objectKeys(obj), function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (isArray(obj[k])) {\n        return map(obj[k], function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\nfunction map (xs, f) {\n  if (xs.map) return xs.map(f);\n  var res = [];\n  for (var i = 0; i < xs.length; i++) {\n    res.push(f(xs[i], i));\n  }\n  return res;\n}\n\nvar objectKeys = Object.keys || function (obj) {\n  var res = [];\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);\n  }\n  return res;\n};\n\nexport function parse(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\nexport default {\n  encode: stringify,\n  stringify: stringify,\n  decode: parse,\n  parse: parse\n}\nexport {stringify as encode, parse as decode};\n", "import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\nimport { stringify } from \"querystring\";\nimport React, { useState } from \"react\";\nimport invariant from \"tiny-invariant\";\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  invariant(params.username, \"Username is required\");\n  const formData = await request.formData();\n  if (\n    formData.get(\"username\") === \"admin@frakton.com\" &&\n    formData.get(\"password\") === \"frakton123\"\n  ) {\n    localStorage.setItem(\"username\", stringify)\n    localStorage.setItem(\"password\", formData.get(\"password\"))\n    return redirect(\"/posts/admin\");\n  }\n  console.log(formData);\n};\n\nconst Login = () => {\n  return (\n    <div>\n      <form\n        method=\"post\"\n        className=\"mx-auto my-20 flex h-max max-w-xs flex-col\"\n      >\n        <label className=\"my-4\">\n          Username: <br />\n          <input\n            className=\"my-4 rounded-md border border-blue-300 p-1\"\n            type=\"text\"\n            placeholder=\"username\"\n            id=\"username\"\n          />\n        </label>\n        <label className=\"my-4\">\n          Password:\n          <br />\n          <input\n            className=\"my-4 rounded-md border border-blue-300 p-1\"\n            type=\"password\"\n            placeholder=\"password\"\n            id=\"password\"\n          />\n        </label>\n        <input\n          className=\"hover:border-black-100 hover:bg-black-100 my-4 cursor-pointer rounded-md border border-solid border-black p-1\"\n          type=\"submit\"\n          name=\"Submit\"\n          value=\"submit\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],
  "mappings": ";;;;;;;;AA4BA,IAAI,UAAU,MAAM,WAAW,SAAU,IAAI;AAC3C,SAAO,OAAO,UAAU,SAAS,KAAK,EAAE,MAAM;AAChD;;;AC9BA;AAoBA,IAAM,QAAQ,MAAM;AAClB,SACE,mDAAC;AAAA,IACC,6DAAC;AAAA,MACC,QAAO;AAAA,MACP,WAAU;AAAA,MAEV;AAAA,2DAAC;AAAA,UAAM,WAAU;AAAA,UAAO;AAAA;AAAA,YACZ,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,mBAAI;AAAA,YACd,mDAAC;AAAA,cACC,WAAU;AAAA,cACV,MAAK;AAAA,cACL,aAAY;AAAA,cACZ,IAAG;AAAA,eAJL;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA;AAAA,WAPF;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA,QACA,mDAAC;AAAA,UAAM,WAAU;AAAA,UAAO;AAAA;AAAA,YAEtB,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,mBAAI;AAAA,YACJ,mDAAC;AAAA,cACC,WAAU;AAAA,cACV,MAAK;AAAA,cACL,aAAY;AAAA,cACZ,IAAG;AAAA,eAJL;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA;AAAA,WARF;AAAA;AAAA;AAAA;AAAA,eASA;AAAA,QACA,mDAAC;AAAA,UACC,WAAU;AAAA,UACV,MAAK;AAAA,UACL,MAAK;AAAA,UACL,OAAM;AAAA,WAJR;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA;AAAA,OA5BF;AAAA;AAAA;AAAA;AAAA,WA6BA;AAAA,KA9BF;AAAA;AAAA;AAAA;AAAA,SA+BA;AAEJ;AAEA,IAAO,gBAAQ;",
  "names": []
}
