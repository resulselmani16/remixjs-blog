{
  "version": 3,
  "sources": ["../../../../../app/routes/posts/login/index.tsx"],
  "sourcesContent": ["import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\nimport React, { useState } from \"react\";\nimport invariant from \"tiny-invariant\";\n\nconst loader: LoaderFunction = async ({ request }) => {\n    const loggedUsername = localStorage.getItem(\"username\");\n    const loggedPassword = localStorage.getItem(\"password\");\n  if (\n    loggedUsername === \"admin@frakton.com\" &&\n    loggedPassword === \"frakton123\"\n  ) {\n    return redirect(\"posts/admin\");\n  }\n};\n\nexport const action: ActionFunction = async ({request, params}) => {\n    invariant(params.username, \"Username is required\");\n    const formData = await request.formData();\n    if(formData.get(\"username\") === \"admin@frakton.com\" && formData.get(\"password\") === \"frakton123\"){\n        return redirect(\"/posts/admin\")\n    }\n}\n\nconst Login = () => {\n\n  return (\n    <div>\n      <form\n        method=\"post\"\n        className=\"mx-auto my-20 flex h-max max-w-xs flex-col\"\n      >\n        <label className=\"my-4\">Username:</label>\n        <input\n          className=\"rounded-md p-1\"\n          type=\"text\"\n          placeholder=\"username\"\n          id=\"username\"\n        />\n        <label className=\"my-4\">Password:</label>\n        <input\n          className=\"rounded-md p-1\"\n          type=\"password\"\n          placeholder=\"password\"\n        />\n        <input\n          className=\"my-4 cursor-pointer rounded-md border border-solid border-black p-1 hover:border-black-100 hover:bg-black-100\"\n          type=\"submit\"\n          name=\"Submit\"\n          value=\"submit\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],
  "mappings": ";;;;;;;;AAAA;AAwBA,IAAM,QAAQ,MAAM;AAElB,SACE,mDAAC;AAAA,IACC,6DAAC;AAAA,MACC,QAAO;AAAA,MACP,WAAU;AAAA,MAEV;AAAA,2DAAC;AAAA,UAAM,WAAU;AAAA,UAAO;AAAA,WAAxB;AAAA;AAAA;AAAA;AAAA,eAAiC;AAAA,QACjC,mDAAC;AAAA,UACC,WAAU;AAAA,UACV,MAAK;AAAA,UACL,aAAY;AAAA,UACZ,IAAG;AAAA,WAJL;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,QACA,mDAAC;AAAA,UAAM,WAAU;AAAA,UAAO;AAAA,WAAxB;AAAA;AAAA;AAAA;AAAA,eAAiC;AAAA,QACjC,mDAAC;AAAA,UACC,WAAU;AAAA,UACV,MAAK;AAAA,UACL,aAAY;AAAA,WAHd;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,QACA,mDAAC;AAAA,UACC,WAAU;AAAA,UACV,MAAK;AAAA,UACL,MAAK;AAAA,UACL,OAAM;AAAA,WAJR;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA;AAAA,OAtBF;AAAA;AAAA;AAAA;AAAA,WAuBA;AAAA,KAxBF;AAAA;AAAA;AAAA;AAAA,SAyBA;AAEJ;AAEA,IAAO,gBAAQ;",
  "names": []
}
