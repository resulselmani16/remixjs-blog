{
  "version": 3,
  "sources": ["../../../../../app/routes/posts/login/index.tsx"],
  "sourcesContent": ["import type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\nimport React, { useState } from \"react\";\nimport invariant from \"tiny-invariant\";\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  invariant(params.username, \"Username is required\");\n  const formData = await request.formData();\n  if (\n    formData.get(\"username\") === \"admin@frakton.com\" &&\n    formData.get(\"password\") === \"frakton123\"\n  ) {\n    localStorage.setItem(\"username\", formData.get(\"username\"))\n    localStorage.setItem(\"password\", )\n    return redirect(\"/posts/admin\");\n  }\n  console.log(formData);\n};\n\nconst Login = () => {\n  return (\n    <div>\n      <form\n        method=\"post\"\n        className=\"mx-auto my-20 flex h-max max-w-xs flex-col\"\n      >\n        <label className=\"my-4\">\n          Username: <br />\n          <input\n            className=\"my-4 rounded-md border border-blue-300 p-1\"\n            type=\"text\"\n            placeholder=\"username\"\n            id=\"username\"\n          />\n        </label>\n        <label className=\"my-4\">\n          Password:\n          <br />\n          <input\n            className=\"my-4 rounded-md border border-blue-300 p-1\"\n            type=\"password\"\n            placeholder=\"password\"\n            id=\"password\"\n          />\n        </label>\n        <input\n          className=\"hover:border-black-100 hover:bg-black-100 my-4 cursor-pointer rounded-md border border-solid border-black p-1\"\n          type=\"submit\"\n          name=\"Submit\"\n          value=\"submit\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n"],
  "mappings": ";;;;;;;;AAAA;AAmBA,IAAM,QAAQ,MAAM;AAClB,SACE,mDAAC;AAAA,IACC,6DAAC;AAAA,MACC,QAAO;AAAA,MACP,WAAU;AAAA,MAEV;AAAA,2DAAC;AAAA,UAAM,WAAU;AAAA,UAAO;AAAA;AAAA,YACZ,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,mBAAI;AAAA,YACd,mDAAC;AAAA,cACC,WAAU;AAAA,cACV,MAAK;AAAA,cACL,aAAY;AAAA,cACZ,IAAG;AAAA,eAJL;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA;AAAA,WAPF;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA,QACA,mDAAC;AAAA,UAAM,WAAU;AAAA,UAAO;AAAA;AAAA,YAEtB,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,mBAAI;AAAA,YACJ,mDAAC;AAAA,cACC,WAAU;AAAA,cACV,MAAK;AAAA,cACL,aAAY;AAAA,cACZ,IAAG;AAAA,eAJL;AAAA;AAAA;AAAA;AAAA,mBAKA;AAAA;AAAA,WARF;AAAA;AAAA;AAAA;AAAA,eASA;AAAA,QACA,mDAAC;AAAA,UACC,WAAU;AAAA,UACV,MAAK;AAAA,UACL,MAAK;AAAA,UACL,OAAM;AAAA,WAJR;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA;AAAA,OA5BF;AAAA;AAAA;AAAA;AAAA,WA6BA;AAAA,KA9BF;AAAA;AAAA;AAAA;AAAA,SA+BA;AAEJ;AAEA,IAAO,gBAAQ;",
  "names": []
}
