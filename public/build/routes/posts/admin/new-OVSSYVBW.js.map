{
  "version": 3,
  "sources": ["../../../../../app/routes/posts/admin/new.tsx"],
  "sourcesContent": ["import { Form, useActionData } from \"@remix-run/react\";\nimport { redirect, json } from \"@remix-run/server-runtime\";\nimport type { ActionFunction } from \"@remix-run/node\";\nimport { createPost } from \"~/models/post.server\";\n\ntype ActionData = | {\n  title: null | string;\n  slug: null | string;\n  markdown: null | string;\n} | undefined;\n\nexport const action: ActionFunction = async ({ request } : {request: any}) => {\n  const formData = await request.formData();\n  const title = formData.get(\"title\");\n  const slug = formData.get(\"slug\");\n  const markdown = formData.get(\"markdown\");\n\n  const errors: ActionData = {\n    title: title ? null : \"Title is required\",\n    slug: slug ? null : \"Slug is required\",\n    markdown: markdown ? null : \"Markdown is required\"\n  };\n\n  const hasErrors = Object.values(errors).some(\n    (errorMessage) => errorMessage\n  )\n\n  if(hasErrors){\n    return json<ActionData>(errors);\n  }\n\n  await createPost({title, slug, markdown});\n\n  return redirect(\"/posts/admin\")\n}\n\nconst inputClassName = `w-full rounded border border-gray-500 px-2 py-1 text-lg`;\n\nexport default function NewPost() {\n  const errors = useActionData();\n  return (\n    <Form method=\"post\">\n    <p>\n      <label htmlFor=\"\">\n        Post Title:\n        {errors?.title ? (\n          <em className=\"text-red-600\">{errors.title}</em>\n        ): null}\n        <input type=\"text\" name=\"title\" className={inputClassName} />\n      </label>\n    </p>\n    <p>\n      <label htmlFor=\"\">\n        Post Slug:\n        <input type=\"text\" name=\"slug\" className={inputClassName} />\n      </label>\n    </p>\n    <p>\n      <label htmlFor=\"markdown\">Markdown:</label>\n      <br />\n      <textarea\n        name=\"markdown\"\n        id=\"markdown\"\n        rows={20}\n        className={`${inputClassName} font-mono`}\n      ></textarea>\n    </p>\n    <p className=\"text-right\">\n      <button\n        type=\"submit\"\n        className=\"rounded bg-blue-500 py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400 disabled:bg-blue-300\"\n      >\n        Create Post\n      </button>\n    </p>\n    </Form>\n  )\n}\n"],
  "mappings": ";;;;;;;;;;;;;AAGA,kBAA2B;AAH3B;AAoCA,IAAM,iBAAiB;AAER,SAAR,UAA2B;AAChC,QAAM,SAAS,cAAc;AAC7B,SACE,mDAAC;AAAA,IAAK,QAAO;AAAA,IACb;AAAA,yDAAC;AAAA,QACC,6DAAC;AAAA,UAAM,SAAQ;AAAA,UAAG;AAAA;AAAA,aAEf,iCAAQ,SACP,mDAAC;AAAA,cAAG,WAAU;AAAA,cAAgB,iBAAO;AAAA,eAArC;AAAA;AAAA;AAAA;AAAA,mBAA2C,IAC1C;AAAA,YACH,mDAAC;AAAA,cAAM,MAAK;AAAA,cAAO,MAAK;AAAA,cAAQ,WAAW;AAAA,eAA3C;AAAA;AAAA;AAAA;AAAA,mBAA2D;AAAA;AAAA,WAL7D;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA,SAPF;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,MACA,mDAAC;AAAA,QACC,6DAAC;AAAA,UAAM,SAAQ;AAAA,UAAG;AAAA;AAAA,YAEhB,mDAAC;AAAA,cAAM,MAAK;AAAA,cAAO,MAAK;AAAA,cAAO,WAAW;AAAA,eAA1C;AAAA;AAAA;AAAA;AAAA,mBAA0D;AAAA;AAAA,WAF5D;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MACA,mDAAC;AAAA,QACC;AAAA,6DAAC;AAAA,YAAM,SAAQ;AAAA,YAAW;AAAA,aAA1B;AAAA;AAAA;AAAA;AAAA,iBAAmC;AAAA,UACnC,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,iBAAI;AAAA,UACJ,mDAAC;AAAA,YACC,MAAK;AAAA,YACL,IAAG;AAAA,YACH,MAAM;AAAA,YACN,WAAW,GAAG;AAAA,aAJhB;AAAA;AAAA;AAAA;AAAA,iBAKC;AAAA;AAAA,SARH;AAAA;AAAA;AAAA;AAAA,aASA;AAAA,MACA,mDAAC;AAAA,QAAE,WAAU;AAAA,QACX,6DAAC;AAAA,UACC,MAAK;AAAA,UACL,WAAU;AAAA,UACX;AAAA,WAHD;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,SANF;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA;AAAA,KAjCA;AAAA;AAAA;AAAA;AAAA,SAkCA;AAEJ;",
  "names": []
}
