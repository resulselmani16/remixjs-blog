{
  "version": 3,
  "sources": ["../../../../../app/routes/posts/admin/$slug.tsx"],
  "sourcesContent": ["import {\n  Form,\n  useActionData,\n  useLoaderData,\n  useTransition,\n} from \"@remix-run/react\";\nimport { redirect, json } from \"@remix-run/node\";\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport {\n  createPost,\n  deletePost,\n  getPost,\n  updatePost,\n} from \"~/models/post.server\";\nimport invariant from \"tiny-invariant\";\nimport type { Post } from \"~/models/post.server\";\nimport authenticator from \"~/services/auth.server\";\nimport { useState } from \"react\";\nimport { marked } from \"marked\";\ntype LoaderData = { post?: Post; html?: string };\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n  await authenticator.isAuthenticated(request, {\n    failureRedirect: \"/login\",\n  });\n  if (params.slug === \"new\") {\n    return json<LoaderData>({});\n  }\n\n  const post = await getPost(params.slug || \"\");\n  if (!post) {\n    return redirect(\"/posts/admin\");\n  }\n  const html = marked(post.markdown);\n  return json<LoaderData>({ post, html });\n};\n\ntype ActionData =\n  | {\n      title: null | string;\n      slug: null | string;\n      markdown: null | string;\n    }\n  | undefined;\n\nexport const action: ActionFunction = async ({ request, params }) => {\n  invariant(params.slug, \"slug is required\");\n  const formData = await request.formData();\n  const intent = formData.get(\"intent\");\n  if (intent === \"delete\") {\n    await deletePost(params.slug);\n    return redirect(\"/posts/admin\");\n  } else if (intent === \"cancel\") {\n    return redirect(\"/posts/admin\");\n  }\n\n  const title = formData.get(\"title\");\n  const slug = formData.get(\"slug\");\n  const markdown = formData.get(\"markdown\");\n\n  const errors: ActionData = {\n    title: title ? null : \"Title is required\",\n    slug: slug && slug !== \"new\" ? null : \"Slug is required\",\n    markdown: markdown ? null : \"Markdown is required\",\n  };\n\n  const hasErrors = Object.values(errors).some((errorMessage) => errorMessage);\n\n  if (hasErrors) {\n    return json<ActionData>(errors);\n  }\n\n  invariant(typeof title === \"string\", \"title must be a string\");\n  invariant(typeof slug === \"string\", \"slug must be a string\");\n  invariant(typeof markdown === \"string\", \"markdown must be a string\");\n\n  if (params.slug === \"new\") {\n    await createPost({ title, slug, markdown });\n  } else {\n    await updatePost(params.slug, { title, slug, markdown });\n  }\n  return redirect(\"/posts/admin\");\n};\n\nconst inputClassName = `w-full rounded border border-gray-500 px-2 py-1 text-lg`;\n\nexport default function NewPost() {\n  const [isEditMode, setIsEditMode] = useState(false);\n  const {post, html} = useLoaderData() as LoaderData;\n  const errors = useActionData() as ActionData;\n  const transition = useTransition();\n  const isCreating = transition.submission?.formData.get(\"intent\") === \"create\";\n  const isUpdating = transition.submission?.formData.get(\"intent\") === \"update\";\n  const isDeleting = transition.submission?.formData.get(\"intent\") === \"delete\";\n  const isCancelling =\n    transition.submission?.formData.get(\"intent\") === \"cancel\";\n  const isNewPost = !post;\n\n  return (\n    <>\n      {isEditMode ? (\n        <div className=\"mx-8\">\n          <Form method=\"post\" key={post?.slug ?? \"new\"}>\n            <div className=\"flex justify-between\">\n              <div>\n                <label>\n                  Post Title:{\" \"}\n                  {errors?.title ? (\n                    <em className=\"text-red-600\">{errors.title}</em>\n                  ) : null}\n                  <input\n                    type=\"text\"\n                    name=\"title\"\n                    className={inputClassName}\n                    defaultValue={post?.title}\n                  />\n                </label>\n              </div>\n              <div>\n                <label>\n                  Post Slug:{\" \"}\n                  {errors?.slug ? (\n                    <em className=\"text-red-600\">{errors.slug}</em>\n                  ) : null}\n                  <input\n                    type=\"text\"\n                    name=\"slug\"\n                    className={inputClassName}\n                    defaultValue={post?.slug}\n                  />\n                </label>\n              </div>\n            </div>\n            <div>\n              <label htmlFor=\"markdown\">\n                Markdown:{\" \"}\n                {errors?.markdown ? (\n                  <em className=\"text-red-600\">{errors.markdown}</em>\n                ) : null}\n              </label>\n              <textarea\n                id=\"markdown\"\n                rows={20}\n                name=\"markdown\"\n                className={`${inputClassName} font-mono`}\n                defaultValue={post?.markdown}\n              />\n            </div>\n            <div className=\"flex justify-end gap-4\">\n              <button\n                type=\"submit\"\n                name=\"intent\"\n                value=\"cancel\"\n                className=\"rounded bg-yellow-500 py-2 px-4 text-white hover:bg-yellow-600 focus:bg-yellow-400 disabled:bg-yellow-300\"\n              >\n                {isCancelling ? \"Cancelling...\" : \"Cancel\"}\n              </button>\n              {isNewPost ? null : (\n                <button\n                  type=\"submit\"\n                  name=\"intent\"\n                  value=\"delete\"\n                  className=\"rounded bg-red-500 py-2 px-4 text-white hover:bg-red-600 focus:bg-red-400 disabled:bg-red-300\"\n                  disabled={isDeleting}\n                >\n                  {isDeleting ? \"Deleting...\" : \"Delete\"}\n                </button>\n              )}\n              <button\n                type=\"submit\"\n                name=\"intent\"\n                value={isNewPost ? \"create\" : \"update\"}\n                className=\"rounded bg-blue-500 py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400 disabled:bg-blue-300\"\n                disabled={isCreating || isUpdating}\n              >\n                {isNewPost\n                  ? isCreating\n                    ? \"Creating...\"\n                    : \"Create Post\"\n                  : null}\n                {isNewPost ? null : isUpdating ? \"Updating...\" : \"Update\"}\n              </button>\n            </div>\n          </Form>\n        </div>\n      ) : (\n        <main className=\"mx-auto max-w-4xl\">\n          <h1 className=\"my-6 border-b-2 text-center text-3xl\">{post?.title}</h1>\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </main>\n      )}\n    </>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_react"]
}
