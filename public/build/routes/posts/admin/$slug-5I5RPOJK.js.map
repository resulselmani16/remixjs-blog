{
  "version": 3,
  "sources": ["../../../../../app/routes/posts/admin/$slug.tsx"],
  "sourcesContent": ["import { Form, useActionData, useTransition } from \"@remix-run/react\";\nimport { redirect, json } from \"@remix-run/server-runtime\";\nimport type { ActionFunction } from \"@remix-run/node\";\nimport { createPost, Post } from \"~/models/post.server\";\nimport invariant from \"tiny-invariant\";\n\ntype LoaderData = {post?: Post};\n\n\n\ntype ActionData =\n  | {\n      title: null | string;\n      slug: null | string;\n      markdown: null | string;\n    }\n  | undefined;\n\nexport const action: ActionFunction = async ({ request }: { request: any }) => {\n  await new Promise((res) => setTimeout(res, 1000))\n  const formData = await request.formData();\n  const title = formData.get(\"title\");\n  const slug = formData.get(\"slug\");\n  const markdown = formData.get(\"markdown\");\n\n  const errors: ActionData = {\n    title: title ? null : \"Title is required\",\n    slug: slug ? null : \"Slug is required\",\n    markdown: markdown ? null : \"Markdown is required\",\n  };\n\n  const hasErrors = Object.values(errors).some((errorMessage) => errorMessage);\n\n  if (hasErrors) {\n    return json<ActionData>(errors);\n  }\n\n  invariant(typeof title === \"string\", \"title must be a string\");\n  invariant(typeof slug === \"string\", \"slug must be a string\");\n  invariant(typeof markdown === \"string\", \"markdown must be a string\");\n\n  await createPost({ title, slug, markdown });\n\n  return redirect(\"/posts/admin\");\n};\n\nconst inputClassName = `w-full rounded border border-gray-500 px-2 py-1 text-lg`;\n\nexport default function NewPost() {\n\n  const transition = useTransition();\n  const isCreating = Boolean(transition.submission);\n  const errors = useActionData();\n  return (\n    <Form method=\"post\">\n      <p>\n        <label htmlFor=\"\">\n          Post Title:\n          {errors?.title ? (\n            <em className=\"text-red-600\"> {errors.title}</em>\n          ) : null}\n          <input type=\"text\" name=\"title\" className={inputClassName} />\n        </label>\n      </p>\n      <p>\n        <label htmlFor=\"\">\n          Post Slug:\n          {errors?.slug ? (\n            <em className=\"text-red-600\"> {errors.slug}</em>\n          ) : null}\n          <input type=\"text\" name=\"slug\" className={inputClassName} />\n        </label>\n      </p>\n      <p>\n        <label htmlFor=\"markdown\">\n          Markdown:\n          {errors?.markdown ? (\n            <em className=\"text-red-600\"> {errors.markdown}</em>\n          ) : null}\n        </label>\n        <br />\n        <textarea\n          name=\"markdown\"\n          id=\"markdown\"\n          rows={20}\n          className={`${inputClassName} font-mono`}\n        ></textarea>\n      </p>\n      <p className=\"text-right\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500 py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400 disabled:bg-blue-300\"\n          disabled={isCreating}\n        >\n          {isCreating ? \"Creating...\" : \"Create Post\"}\n        </button>\n      </p>\n    </Form>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAGA,kBAAiC;AAHjC;AA8CA,IAAM,iBAAiB;AAER,SAAR,UAA2B;AAEhC,QAAM,aAAa,cAAc;AACjC,QAAM,aAAa,QAAQ,WAAW,UAAU;AAChD,QAAM,SAAS,cAAc;AAC7B,SACE,mDAAC;AAAA,IAAK,QAAO;AAAA,IACX;AAAA,yDAAC;AAAA,QACC,6DAAC;AAAA,UAAM,SAAQ;AAAA,UAAG;AAAA;AAAA,aAEf,iCAAQ,SACP,mDAAC;AAAA,cAAG,WAAU;AAAA,cAAe;AAAA;AAAA,gBAAE,OAAO;AAAA;AAAA,eAAtC;AAAA;AAAA;AAAA;AAAA,mBAA4C,IAC1C;AAAA,YACJ,mDAAC;AAAA,cAAM,MAAK;AAAA,cAAO,MAAK;AAAA,cAAQ,WAAW;AAAA,eAA3C;AAAA;AAAA;AAAA;AAAA,mBAA2D;AAAA;AAAA,WAL7D;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA,SAPF;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,MACA,mDAAC;AAAA,QACC,6DAAC;AAAA,UAAM,SAAQ;AAAA,UAAG;AAAA;AAAA,aAEf,iCAAQ,QACP,mDAAC;AAAA,cAAG,WAAU;AAAA,cAAe;AAAA;AAAA,gBAAE,OAAO;AAAA;AAAA,eAAtC;AAAA;AAAA;AAAA;AAAA,mBAA2C,IACzC;AAAA,YACJ,mDAAC;AAAA,cAAM,MAAK;AAAA,cAAO,MAAK;AAAA,cAAO,WAAW;AAAA,eAA1C;AAAA;AAAA;AAAA;AAAA,mBAA0D;AAAA;AAAA,WAL5D;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA,SAPF;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,MACA,mDAAC;AAAA,QACC;AAAA,6DAAC;AAAA,YAAM,SAAQ;AAAA,YAAW;AAAA;AAAA,eAEvB,iCAAQ,YACP,mDAAC;AAAA,gBAAG,WAAU;AAAA,gBAAe;AAAA;AAAA,kBAAE,OAAO;AAAA;AAAA,iBAAtC;AAAA;AAAA;AAAA;AAAA,qBAA+C,IAC7C;AAAA;AAAA,aAJN;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,UACA,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,iBAAI;AAAA,UACJ,mDAAC;AAAA,YACC,MAAK;AAAA,YACL,IAAG;AAAA,YACH,MAAM;AAAA,YACN,WAAW,GAAG;AAAA,aAJhB;AAAA;AAAA;AAAA;AAAA,iBAKC;AAAA;AAAA,SAbH;AAAA;AAAA;AAAA;AAAA,aAcA;AAAA,MACA,mDAAC;AAAA,QAAE,WAAU;AAAA,QACX,6DAAC;AAAA,UACC,MAAK;AAAA,UACL,WAAU;AAAA,UACV,UAAU;AAAA,UAET,uBAAa,gBAAgB;AAAA,WALhC;AAAA;AAAA;AAAA;AAAA,eAMA;AAAA,SAPF;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA;AAAA,KA1CF;AAAA;AAAA;AAAA;AAAA,SA2CA;AAEJ;",
  "names": []
}
